Article.create(:id => 1, :body => "  <style type=\"text/css\">\r\ntd.linenos { background-color: #f0f0f0; padding-right: 10px; }\r\nspan.lineno { background-color: #f0f0f0; padding: 0 5px 0 5px; }\r\npre { line-height: 125%; }\r\nbody .c { color: #408080; font-style: italic } /* Comment */\r\nbody .err { border: 1px solid #FF0000 } /* Error */\r\nbody .k { color: #008000; font-weight: bold } /* Keyword */\r\nbody .o { color: #666666 } /* Operator */\r\nbody .cm { color: #408080; font-style: italic } /* Comment.Multiline */\r\nbody .cp { color: #BC7A00 } /* Comment.Preproc */\r\nbody .c1 { color: #408080; font-style: italic } /* Comment.Single */\r\nbody .cs { color: #408080; font-style: italic } /* Comment.Special */\r\nbody .gd { color: #A00000 } /* Generic.Deleted */\r\nbody .ge { font-style: italic } /* Generic.Emph */\r\nbody .gr { color: #FF0000 } /* Generic.Error */\r\nbody .gh { color: #000080; font-weight: bold } /* Generic.Heading */\r\nbody .gi { color: #00A000 } /* Generic.Inserted */\r\nbody .go { color: #888888 } /* Generic.Output */\r\nbody .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\r\nbody .gs { font-weight: bold } /* Generic.Strong */\r\nbody .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\r\nbody .gt { color: #0044DD } /* Generic.Traceback */\r\nbody .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\r\nbody .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\r\nbody .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\r\nbody .kp { color: #008000 } /* Keyword.Pseudo */\r\nbody .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\r\nbody .kt { color: #B00040 } /* Keyword.Type */\r\nbody .m { color: #666666 } /* Literal.Number */\r\nbody .s { color: #BA2121 } /* Literal.String */\r\nbody .na { color: #7D9029 } /* Name.Attribute */\r\nbody .nb { color: #008000 } /* Name.Builtin */\r\nbody .nc { color: #0000FF; font-weight: bold } /* Name.Class */\r\nbody .no { color: #880000 } /* Name.Constant */\r\nbody .nd { color: #AA22FF } /* Name.Decorator */\r\nbody .ni { color: #999999; font-weight: bold } /* Name.Entity */\r\nbody .ne { color: #D2413A; font-weight: bold } /* Name.Exception */\r\nbody .nf { color: #0000FF } /* Name.Function */\r\nbody .nl { color: #A0A000 } /* Name.Label */\r\nbody .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */\r\nbody .nt { color: #008000; font-weight: bold } /* Name.Tag */\r\nbody .nv { color: #19177C } /* Name.Variable */\r\nbody .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */\r\nbody .w { color: #bbbbbb } /* Text.Whitespace */\r\nbody .mf { color: #666666 } /* Literal.Number.Float */\r\nbody .mh { color: #666666 } /* Literal.Number.Hex */\r\nbody .mi { color: #666666 } /* Literal.Number.Integer */\r\nbody .mo { color: #666666 } /* Literal.Number.Oct */\r\nbody .sb { color: #BA2121 } /* Literal.String.Backtick */\r\nbody .sc { color: #BA2121 } /* Literal.String.Char */\r\nbody .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\r\nbody .s2 { color: #BA2121 } /* Literal.String.Double */\r\nbody .se { color: #BB6622; font-weight: bold } /* Literal.String.Escape */\r\nbody .sh { color: #BA2121 } /* Literal.String.Heredoc */\r\nbody .si { color: #BB6688; font-weight: bold } /* Literal.String.Interpol */\r\nbody .sx { color: #008000 } /* Literal.String.Other */\r\nbody .sr { color: #BB6688 } /* Literal.String.Regex */\r\nbody .s1 { color: #BA2121 } /* Literal.String.Single */\r\nbody .ss { color: green } /* Literal.String.Symbol */\r\nbody .bp { color: #008000 } /* Name.Builtin.Pseudo */\r\nbody .vc { color: #19177C } /* Name.Variable.Class */\r\nbody .vg { color: #19177C } /* Name.Variable.Global */\r\nbody .vi { color: #19177C } /* Name.Variable.Instance */\r\nbody .il { color: #666666 } /* Literal.Number.Integer.Long */\r\n  </style>\r\n<body>\r\n<h2></h2>\r\n\r\n<div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"nf\">incident_params</span>\r\n      <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">require</span><span class=\"p\">(</span><span class=\"ss\">:incident</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">permit</span><span class=\"p\">(</span><span class=\"ss\">:bus_id</span><span class=\"p\">,</span> <span class=\"ss\">:driver_id</span><span class=\"p\">,</span> <span class=\"ss\">:student_id</span><span class=\"p\">,</span> <span class=\"ss\">:date_reported</span><span class=\"p\">,</span>\r\n                                       <span class=\"ss\">:date_occurred</span><span class=\"p\">,</span>\r\n                                       <span class=\"n\">infraction_ids</span><span class=\"ss\">:[]</span><span class=\"p\">,</span>\r\n                                       <span class=\"n\">consequence_ids</span><span class=\"ss\">:[]</span><span class=\"p\">,</span>\r\n                                       <span class=\"n\">time_span_attributes</span><span class=\"p\">:</span><span class=\"o\">[</span><span class=\"ss\">:suspended_days</span><span class=\"p\">,</span> <span class=\"ss\">:amount</span><span class=\"p\">,</span> <span class=\"ss\">:start</span><span class=\"p\">,</span> <span class=\"ss\">:end</span><span class=\"p\">,</span> <span class=\"ss\">:due</span><span class=\"o\">]</span><span class=\"p\">,</span>\r\n                                       <span class=\"n\">comments_attributes</span><span class=\"p\">:</span><span class=\"o\">[</span><span class=\"ss\">:content</span><span class=\"o\">]</span><span class=\"p\">)</span>\r\n  <span class=\"k\">end</span>\r\n</pre></div>\r\n</body>\r\n\r\n", :post_id => 2)
Article.create(:id => 2, :body => "When trying to run the Shell action from Pentaho I kept getting \"error = 13, permission denied\". This is most likely because you permissions for the .sh file are not updated. \r\n\r\n$ chmod 777 path_to_file/foo.sh\r\n\r\nThat should add the correct permissions and allow Pentaho to run the shell command. ")
Article.create(:id => 3, :body => "ssh -f -L3310:localhost:3306 redzone@162.209.88.239 -N && /usr/local/bin/mysql -P 3310 -h 127.0.0.1 -u root --password=l1nDigitaL volume_video_production -B -e \"select * from stats INTO OUTFILE '/tmp/stats.csv' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\" && scp redzone@162.209.88.239:/tmp/stats.csv /Users/garrettboone/Desktop/pdi/\r\n")
Article.create(:id => 4, :body => "When trying to run the Shell action from Pentaho I kept getting \"error = 13, permission denied\". This is most likely because you permissions for the .sh file are not updated. \r\n\r\n$ chmod 777 path_to_file/foo.sh\r\n\r\nThat should add the correct permissions and allow Pentaho to run the shell command. \r\n\r\nssh -f -L3310:localhost:3306 redzone@162.209.88.239 -N && /usr/local/bin/mysql -P 3310 -h 127.0.0.1 -u root --password=l1nDigitaL volume_video_production -B -e \"select * from stats INTO OUTFILE '/tmp/stats.csv' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\" && scp redzone@162.209.88.239:/tmp/stats.csv /Users/garrettboone/Desktop/pdi/\r\n")
Article.create(:id => 5, :body => "When trying to run the Shell action from Pentaho I kept getting \"error = 13, permission denied\". This is most likely because you permissions for the .sh file are not updated. \r\n\r\n$ chmod 777 path_to_file/foo.sh\r\n\r\nThat should add the correct permissions and allow Pentaho to run the shell command. \r\n\r\nssh -f -L3310:localhost:3306 redzone@162.209.88.239 -N && /usr/local/bin/mysql -P 3310 -h 127.0.0.1 -u root --password=l1nDigitaL volume_video_production -B -e \"select * from stats INTO OUTFILE '/tmp/stats.csv' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\" && scp redzone@162.209.88.239:/tmp/stats.csv /Users/garrettboone/Desktop/pdi/\r\n")
Article.create(:id => 6, :body => "OMG!")
Article.create(:id => 10, :body => "<h3>Connecting from local box to remote server,creating a csv from database, and securely copying it back.</h3>\r\n<p>Write a shell script (foo.sh) and save it in your Pentaho repository</p>\r\n<p>Use the Shell step in a Job (not available in a transformation) and point it to your shell file</p>\r\n<p>An Example is below on how I connected to ours to get the latest data from Staging server</p>\r\n<p>Note* this is not very secure and I am searching for another way to connect but works while developing locally when you need to connect your tables</p>\r\n<div class=\"code\">\r\n<p>ssh -f -L3310:localhost:3306 <span class=\"user_input\">USER@HOST_IP</span> -N && /usr/local/bin/mysql -P 3310 -h 127.0.0.1 -u <span class=\"user_input\">DB_USER</span> --password=<span class=\"user_input\">DB_PASSWORD</span> db -B -e \"select * from stats INTO OUTFILE '/tmp/stats.csv' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\" && scp <span class=\"user_input\">USER@HOST_IP</span>:/tmp/stats.csv /Users/yourusername/Desktop/or_wherever</p>\r\n</div>\r\n<p>WTF does all this mean?</p>\r\n<div class=\"code\">\r\n<p>ssh -f(forward port) -L3310(listen on port3310):localhost:3306 user@host_ip -N && /usr/local/bin/mysql(just using mysql wouldnt work) -P(use port 3310) 3310 -h 127.0.0.1 -u db_user --password=db_password db_name -B -e \"select * from stats INTO OUTFILE '/tmp/stats.csv' FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"' LINES TERMINATED BY '\\n';\" && scp(securely copy the file from:to) user@host_ip:/tmp/stats.csv /Users/yourusername/Desktop/or_wherever</p>\r\n</div>", :post_id => 3)
Article.create(:id => 11, :body => "<h3>If Pentaho is giving an error 13 permission denied when trying to execute a bash shell script</h3>\r\n<p>As I was new to Pentaho I thought this was a an error from within Pentaho but after searching around for awhile I couldn't find any clear answers to this and then it suddenly came to me!</p>\r\n<p> Why don't I just change the permissions to the actual file.</p>\r\n<div class=\"terminal\">\r\n<p> $ chmod 777 foo.sh</p>\r\n</div>\r\n<p>That's it! :)</p>", :post_id => 3)
Article.create(:id => 12, :body => "After looking at the code I was amazed coming from a Ruby and Rails background how much effort it seemed to take to just get a model or a class going. Here's what I've learned and implemented. Other have surely done the same and better but this was my solution.", :post_id => 4)
Article.create(:id => 13, :body => "CREATE VIEW `ol_stats_by_day` as SELECT \r\ndate(m.hour),\r\nol.customer_id,\r\n      ol.business_unit, \r\n      ol.business_segment,\r\n      ol.description,        \r\n  ol.order_id,\r\n  ol.order_line_id,\r\n  ol.line_type,\r\n  pc.campaign_start_date,\r\n  pc.campaign_end_date,\r\n  DATEDIFF(pc.campaign_end_date,DATE(m.hour)) as days_left,\r\n  pc.campaign_goal,\r\n    IF(ol.line_type = \"marketplace\",SUM(REPLACE(spend, '$', '')),((sum(m.impressions) / 1000)* pc.publisher_rate) + ((sum(m.impressions) / 1000)* \tpc.ad_serving_rate)) as cost,\r\n  ((SUM(m.impressions)/1000)*pc.advertiser_rate) revenue,\r\n  F_CPM(SUM(m.impressions), pc.advertiser_rate) t_revenue,\r\n  SUM(substring_index(m.revenue,'$',-1)),\r\n  SUM(m.impressions) as impressions,\r\n  SUM(m.watched25) as watched25,\r\n  SUM(m.watched50) as watched50,\r\n  SUM(m.watched75) as watched75,\r\n  sum(clickthroughs) as clickthroughs,\r\n  SUM(m.watched100) as watched100,\r\n  SUM(m.clickthroughs) /  SUM(m.impressions) as ctr\r\n  FROM v_lr_order_lines ol,\r\n      source_liverail_metrics m,\r\n      premium_campaigns pc\r\nWHERE m.order_line_id = ol.order_line_id\r\n  AND m.order_line_id = pc.order_line_id\r\n--   AND ol.order_line_id = '58066626' \r\n--   AND DATE(m.hour) = DATE(NOW()) - 2\r\nGROUP BY description,\r\ndate(m.hour)\r\nORDER BY description;", :post_id => 5)
Article.create(:id => 14, :body => "/* SET @total:=0;\r\nSET @total_revenue:=0;\r\nSET @total_cost:=0;\r\nSET @total_watched100:=0;\r\nSET @total_clickthroughs:=0;\r\nSELECT\r\n  q1.report_date,\r\n  q1.customer_id, \r\n  q1.business_unit, \r\n  q1.business_segment,\r\n  q1.description,        \r\n  q1.order_id,\r\n  q1.order_line_id,\r\n  q1.line_type,\r\n  q1.campaign_start_date,\r\n  q1.campaign_end_date,\r\n  q1.campaign_goal,\r\n  q1.days_left,\r\n  q1.clickthroughs,\r\n  q1.ctr,\r\n  q1.impressions,\r\n  q1.revenue,\r\n  q1.cost,\r\n  (@total := @total + q1.impressions) AS total_imps,\r\n  (@total_cost := @total_cost + q1.cost) AS total_cost,\r\n  (@total_revenue := @total_revenue + q1.revenue) AS total_revenue,\r\n  (@total_watched100 := @total_watched100 + q1.watched100) AS total_watched100,\r\n  (@total_clickthroughs := @total_clickthroughs + q1.clickthroughs) AS total_clickthroughs,\r\n  ((@total_clickthroughs) / @total) * 100 as ctr,\r\n  ((q1.campaign_goal) - @total) / q1.days_left as daily_pace_needed\r\nFROM (SELECT\r\nimpressions AS impressions,\r\ncustomer_id,\r\nbusiness_unit, \r\nbusiness_segment,\r\ndescription,\r\n`date(m.hour)` as report_date,        \r\norder_id,\r\norder_line_id,\r\nline_type,\r\ncampaign_start_date,\r\ncampaign_end_date,\r\ncampaign_goal,\r\ndays_left,\r\ncost,\r\nrevenue,\r\nwatched25,\r\nwatched50,\r\nwatched75,\r\nwatched100,\r\nclickthroughs,\r\nctr,\r\nCOUNT(*) AS count\r\n\r\nFROM\r\nol_stats_by_day\r\nWHERE `date(m.hour)` <= DATE(now())-1\r\nAND order_line_id = 58066629\r\nGROUP BY description,\r\n`date(m.hour)`) AS q1 */", :post_id => 5)
Article.create(:id => 15, :body => "SELECT * FROM \r\nol_stats_by_day\r\nwhere `date(m.hour)` = Date(NOW())-1\r\ngroup by description,\r\n`date(m.hour)`", :post_id => 5)
Article.create(:id => 16, :body => "Dashboard.html needed to be copied exactly as in the example app and also needed to add article-listing.html and its contents to the /public directory\r\nEdit dashboard.html to look like the example embedded app code as below.\r\n//dashboard.html\r\n<div class=\"code\">\r\n<body>\r\n<h2></h2>\r\n\r\n<div class=\"highlight\"><pre><span class=\"nt\">&lt;nav</span> <span class=\"na\">class=</span><span class=\"s\">&quot;top-bar&quot;</span><span class=\"nt\">&gt;</span>\r\n  <span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">&quot;title-area&quot;</span><span class=\"nt\">&gt;</span>\r\n    <span class=\"c\">&lt;!-- Title Area --&gt;</span>\r\n    <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">&quot;name&quot;</span><span class=\"nt\">&gt;</span>\r\n      <span class=\"nt\">&lt;h1&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;#&quot;</span><span class=\"nt\">&gt;</span>Welcome back {{ user.name }} <span class=\"nt\">&lt;/a&gt;&lt;/h1&gt;</span>\r\n    <span class=\"nt\">&lt;/li&gt;</span>\r\n    <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">&quot;toggle-topbar menu-icon&quot;</span><span class=\"nt\">&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;#&quot;</span><span class=\"nt\">&gt;&lt;span&gt;</span>Menu<span class=\"nt\">&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;</span>\r\n  <span class=\"nt\">&lt;/ul&gt;</span>\r\n\r\n  <span class=\"nt\">&lt;section</span> <span class=\"na\">class=</span><span class=\"s\">&quot;top-bar-section&quot;</span><span class=\"nt\">&gt;</span>\r\n    <span class=\"c\">&lt;!-- Right Nav Section --&gt;</span>\r\n    <span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">&quot;right&quot;</span><span class=\"nt\">&gt;</span>\r\n      <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">&quot;divider show-for-small&quot;</span><span class=\"nt\">&gt;&lt;/li&gt;</span>\r\n      <span class=\"nt\">&lt;li&gt;</span>\r\n        <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;/users/sign_out&quot;</span><span class=\"nt\">&gt;</span>Sign out<span class=\"nt\">&lt;/a&gt;</span>\r\n      <span class=\"nt\">&lt;/li&gt;</span>\r\n    <span class=\"nt\">&lt;/ul&gt;</span>\r\n  <span class=\"nt\">&lt;/section&gt;</span>\r\n<span class=\"nt\">&lt;/nav&gt;</span>\r\n<span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">&quot;container&quot;</span><span class=\"nt\">&gt;</span>\r\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">&quot;row&quot;</span><span class=\"nt\">&gt;</span>\r\n    <span class=\"nt\">&lt;ul</span> <span class=\"na\">class=</span><span class=\"s\">&quot;large-12 columns&quot;</span><span class=\"nt\">&gt;</span>\r\n      <span class=\"nt\">&lt;li</span> <span class=\"na\">class=</span><span class=\"s\">&quot;row&quot;</span> <span class=\"na\">data-ng-repeat=</span><span class=\"s\">&quot;article in articles | orderBy:publishedDate:false&quot;</span><span class=\"nt\">&gt;</span>\r\n      <span class=\"nt\">&lt;article-listing</span> <span class=\"na\">ng-model=</span><span class=\"s\">&quot;article&quot;</span> <span class=\"na\">on-share=</span><span class=\"s\">&quot;share(recipient, article)&quot;</span><span class=\"nt\">&gt;&lt;/article-listing&gt;</span>\r\n      <span class=\"nt\">&lt;/li&gt;</span>\r\n    <span class=\"nt\">&lt;/ul&gt;</span>\r\n  <span class=\"nt\">&lt;/div&gt;</span>\r\n<span class=\"nt\">&lt;/div&gt;</span>\r\n</pre></div>\r\n</body>\r\n</div>\r\n\r\n//article-listing.html\r\n\r\n<div class=\"code\">\r\n<body>\r\n<h2></h2>\r\n\r\n<div class=\"highlight\"><pre><span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">&quot;article-listing&quot;</span><span class=\"nt\">&gt;</span>\r\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">&quot;large-10 small-10 columns&quot;</span><span class=\"nt\">&gt;</span>\r\n    <span class=\"nt\">&lt;h2&gt;&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">&quot;{{ ngModel.link }}&quot;</span> <span class=\"na\">title=</span><span class=\"s\">&quot;{{ ngModel.title }}&quot;</span><span class=\"nt\">&gt;</span>{{ ngModel.title }}<span class=\"nt\">&lt;/a&gt;&lt;/h2&gt;</span>\r\n    <span class=\"nt\">&lt;p&gt;</span>{{ ngModel.publishedDate | toDate |date:&#39;M/d/yy h:mm:ss a&#39; }}<span class=\"nt\">&lt;/p&gt;</span>\r\n  <span class=\"nt\">&lt;/div&gt;</span>\r\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">&quot;small-2 large-2 columns&quot;</span><span class=\"nt\">&gt;</span>\r\n\r\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">data-ng-hide=</span><span class=\"s\">&quot;showShareBox&quot;</span><span class=\"nt\">&gt;</span>\r\n      <span class=\"nt\">&lt;a</span> <span class=\"na\">ng-click=</span><span class=\"s\">&quot;showShareBox=!showShareBox&quot;</span><span class=\"nt\">&gt;</span>Share with a friend<span class=\"nt\">&lt;/a&gt;</span>\r\n    <span class=\"nt\">&lt;/div&gt;</span>\r\n\r\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">data-ng-show=</span><span class=\"s\">&quot;showShareBox&quot;</span><span class=\"nt\">&gt;</span>\r\n      <span class=\"nt\">&lt;form</span> <span class=\"na\">name=</span><span class=\"s\">&quot;shareForm&quot;</span><span class=\"nt\">&gt;</span>\r\n        <span class=\"nt\">&lt;label&gt;</span>Share with a friend<span class=\"nt\">&lt;/label&gt;</span>\r\n        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">&quot;text&quot;</span> <span class=\"na\">placeholder=</span><span class=\"s\">&quot;email or username&quot;</span> <span class=\"na\">ng-model=</span><span class=\"s\">&quot;newShare.recipient&quot;</span> <span class=\"na\">is-user-or-email=</span><span class=\"s\">&quot;&quot;</span><span class=\"nt\">&gt;</span>\r\n        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">&quot;button&quot;</span> <span class=\"na\">class=</span><span class=\"s\">&quot;btn&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Cancel&quot;</span> <span class=\"na\">data-ng-click=</span><span class=\"s\">&quot;showShareBox = !showShareBox&quot;</span><span class=\"nt\">&gt;</span>\r\n        <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">&quot;submit&quot;</span> <span class=\"na\">class=</span><span class=\"s\">&quot;btn&quot;</span> <span class=\"na\">ng-click=</span><span class=\"s\">&quot;showShareBox=!showShareBox;share()&quot;</span> <span class=\"na\">ng-disabled=</span><span class=\"s\">&quot;shareForm.$invalid&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Share&quot;</span><span class=\"nt\">&gt;</span>\r\n      <span class=\"nt\">&lt;/form&gt;</span>\r\n    <span class=\"nt\">&lt;/div&gt;</span>\r\n  <span class=\"nt\">&lt;/div&gt;</span>\r\n<span class=\"nt\">&lt;/div&gt;</span>\r\n</pre></div>\r\n</body>\r\n</div>\r\n\r\n\r\nAdded the directive for article-listing after the isUserorEmail directive in <p>directives.js</p>\r\n<div class=\"code\">\r\n\r\n</head>\r\n<body>\r\n<h2></h2>\r\n\r\n<div class=\"highlight\"><pre><span class=\"p\">.</span><span class=\"nx\">directive</span><span class=\"p\">(</span><span class=\"s1\">&#39;articleListing&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\r\n  <span class=\"k\">return</span> <span class=\"p\">{</span>\r\n    <span class=\"nx\">restrict</span><span class=\"o\">:</span> <span class=\"s1\">&#39;EA&#39;</span><span class=\"p\">,</span>\r\n    <span class=\"nx\">require</span><span class=\"o\">:</span> <span class=\"s1\">&#39;ngModel&#39;</span><span class=\"p\">,</span>\r\n    <span class=\"nx\">scope</span><span class=\"o\">:</span> <span class=\"p\">{</span>\r\n      <span class=\"s1\">&#39;ngModel&#39;</span><span class=\"o\">:</span> <span class=\"s1\">&#39;=&#39;</span><span class=\"p\">,</span>\r\n      <span class=\"s1\">&#39;onShare&#39;</span><span class=\"o\">:</span> <span class=\"s1\">&#39;&amp;&#39;</span>\r\n    <span class=\"p\">},</span>\r\n    <span class=\"nx\">templateUrl</span><span class=\"o\">:</span> <span class=\"s1\">&#39;templates/article_listing.html&#39;</span><span class=\"p\">,</span>\r\n    <span class=\"nx\">link</span><span class=\"o\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">scope</span><span class=\"p\">,</span> <span class=\"nx\">ele</span><span class=\"p\">,</span> <span class=\"nx\">attrs</span><span class=\"p\">,</span> <span class=\"nx\">ctrl</span><span class=\"p\">)</span> <span class=\"p\">{</span>\r\n      <span class=\"nx\">scope</span><span class=\"p\">.</span><span class=\"nx\">newShare</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"nx\">recipient</span><span class=\"o\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">};</span>\r\n      <span class=\"nx\">scope</span><span class=\"p\">.</span><span class=\"nx\">share</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\r\n        <span class=\"nx\">scope</span><span class=\"p\">.</span><span class=\"nx\">onShare</span><span class=\"p\">({</span>\r\n          <span class=\"s1\">&#39;recipient&#39;</span><span class=\"o\">:</span> <span class=\"nx\">scope</span><span class=\"p\">.</span><span class=\"nx\">newShare</span><span class=\"p\">.</span><span class=\"nx\">recipient</span><span class=\"p\">,</span> \r\n          <span class=\"s1\">&#39;article&#39;</span><span class=\"o\">:</span> <span class=\"nx\">scope</span><span class=\"p\">.</span><span class=\"nx\">ngModel</span>\r\n        <span class=\"p\">});</span>\r\n      <span class=\"p\">};</span>\r\n    <span class=\"p\">}</span>\r\n  <span class=\"p\">}</span>\r\n<span class=\"p\">})</span>\r\n<span class=\"p\">;</span>\r\n</pre></div>\r\n</body>\r\n</div>\r\n\r\n//routes.rb\r\n\r\n<div class=\"code\">\r\n<body>\r\n<h2></h2>\r\n\r\n<div class=\"highlight\"><pre><span class=\"no\">Shareup</span><span class=\"o\">::</span><span class=\"no\">Application</span><span class=\"o\">.</span><span class=\"n\">routes</span><span class=\"o\">.</span><span class=\"n\">draw</span> <span class=\"k\">do</span>\r\n  <span class=\"n\">resources</span> <span class=\"ss\">:shares</span>\r\n\r\n  <span class=\"n\">devise_for</span> <span class=\"ss\">:users</span><span class=\"p\">,</span>\r\n    <span class=\"ss\">:controllers</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\r\n      <span class=\"ss\">:omniauth_callbacks</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">&quot;users/omniauth_callbacks&quot;</span>\r\n    <span class=\"p\">}</span>\r\n\r\n  <span class=\"n\">devise_scope</span> <span class=\"ss\">:user</span> <span class=\"k\">do</span>\r\n    <span class=\"n\">get</span> <span class=\"s1\">&#39;/current_user&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;users/sessions#show_current_user&#39;</span><span class=\"p\">,</span> <span class=\"ss\">as</span><span class=\"p\">:</span> <span class=\"s1\">&#39;show_current_user&#39;</span>\r\n    <span class=\"n\">post</span> <span class=\"s1\">&#39;/api/check/is_user&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;users/users#is_user&#39;</span><span class=\"p\">,</span> <span class=\"ss\">as</span><span class=\"p\">:</span> <span class=\"s1\">&#39;is_user&#39;</span>\r\n  <span class=\"k\">end</span>\r\n\r\n  <span class=\"n\">get</span> <span class=\"s1\">&#39;/dashboard&#39;</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">&#39;welcome#dashboard&#39;</span>\r\n  <span class=\"n\">root</span> <span class=\"ss\">to</span><span class=\"p\">:</span> <span class=\"s1\">&#39;welcome#index&#39;</span>\r\n<span class=\"k\">end</span>\r\n</pre></div>\r\n</body>\r\n\r\n</div>\r\nIn the tutorial we make a route as \r\n\r\nnamespace:api do \r\nresources: :shares\r\nend\r\n\r\nHowever, in the example app it is only as resources: :shares. \r\n\r\nThis needs to be resources: :shares as the directory structure is not in a way of API::Shares… so when it tries to route there it gets an uninitialized constant of API.\r\n\r\nAfter changing to resources: :shares you also need to change the .factory(“Share”) in services.js to resource to $resource('/shares/:id.json’,.\r\n\r\n<div class=\"code\">\r\n<body>\r\n<h2></h2>\r\n\r\n<div class=\"highlight\"><pre><span class=\"p\">.</span><span class=\"nx\">factory</span><span class=\"p\">(</span><span class=\"s1\">&#39;Share&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$resource</span><span class=\"p\">)</span> <span class=\"p\">{</span>\r\n  <span class=\"kd\">var</span> <span class=\"nx\">service</span> <span class=\"o\">=</span> <span class=\"nx\">$resource</span><span class=\"p\">(</span><span class=\"s1\">&#39;/shares/:id.json&#39;</span><span class=\"p\">,</span>\r\n      <span class=\"p\">{</span> <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"s1\">&#39;@id&#39;</span> <span class=\"p\">},</span>\r\n      <span class=\"p\">{}</span>\r\n    <span class=\"p\">);</span>\r\n\r\n  <span class=\"k\">return</span> <span class=\"nx\">service</span><span class=\"p\">;</span>\r\n<span class=\"p\">})</span>\r\n</pre></div>\r\n</body>\r\n</div>\r\n\r\nAlso add this to the email validation in \r\n:allow_blank => true to pass validation when not including email address and using id instead\r\n\r\nOne last thing that might make people newer to rails or ruby is that in dashboards.html Welcome {{ user.name }} should probably be Welcome{{ user.email }}.\r\n\r\n", :post_id => 13)
Article.create(:id => 17, :body => "<div class = \"code\">\r\n<body>\r\n<h2></h2>\r\n\r\n<div class=\"highlight\"><pre><span class=\"c1\">// public/js/services&lt;/p&gt;</span>\r\n<span class=\"c1\">// Create your factory and module</span>\r\n<span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s1\">&#39;postService&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\r\n\r\n  <span class=\"c1\">// super simple service</span>\r\n  <span class=\"c1\">// each function returns a promise object</span>\r\n  <span class=\"p\">.</span><span class=\"nx\">factory</span><span class=\"p\">(</span><span class=\"s1\">&#39;Posts&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$http</span><span class=\"p\">)</span> <span class=\"p\">{</span>\r\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\r\n<span class=\"nx\">getPost</span>  <span class=\"o\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">id</span><span class=\"p\">){</span>\r\n        <span class=\"kd\">var</span> <span class=\"nx\">id</span> <span class=\"o\">=</span> <span class=\"nx\">id</span><span class=\"p\">[</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">];</span>\r\n        <span class=\"k\">return</span> <span class=\"nx\">$http</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;/post/&#39;</span> <span class=\"o\">+</span> <span class=\"nx\">id</span><span class=\"p\">);</span>\r\n      <span class=\"p\">}</span>\r\n    <span class=\"p\">}</span>\r\n  <span class=\"p\">});</span>\r\n\r\n\r\n\r\n<span class=\"c1\">// #controllers/main.js</span>\r\n<span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s1\">&#39;postController&#39;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\r\n\r\n  <span class=\"c1\">// inject the Post service factory into our controller</span>\r\n  <span class=\"p\">.</span><span class=\"nx\">controller</span><span class=\"p\">(</span><span class=\"s1\">&#39;mainPostController&#39;</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">$scope</span><span class=\"p\">,</span><span class=\"nx\">$route</span><span class=\"p\">,</span> <span class=\"nx\">$routeParams</span><span class=\"p\">,</span> <span class=\"nx\">$location</span><span class=\"p\">,</span> <span class=\"nx\">Posts</span><span class=\"p\">)</span> <span class=\"p\">{</span>\r\n    <span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">showPost</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">id</span><span class=\"p\">)</span> <span class=\"p\">{</span>\r\n     <span class=\"nx\">Posts</span><span class=\"p\">.</span><span class=\"nx\">getPost</span><span class=\"p\">(</span><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">$parent</span><span class=\"p\">.</span><span class=\"nx\">$routeParams</span><span class=\"p\">)</span>\r\n      <span class=\"p\">.</span><span class=\"nx\">success</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"p\">{</span>\r\n        <span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">post</span> <span class=\"o\">=</span> <span class=\"nx\">data</span><span class=\"p\">;</span>\r\n    <span class=\"p\">});</span>\r\n    <span class=\"p\">};</span>\r\n\r\n\r\n<span class=\"c1\">//#public/js/core.js&lt;/p&gt;</span>\r\n<span class=\"nx\">angular</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s1\">&#39;blogPost&#39;</span><span class=\"p\">,[</span><span class=\"s1\">&#39;ngRoute&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;postController&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;postService&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;pentahoController&#39;</span><span class=\"p\">])</span>\r\n  <span class=\"p\">.</span><span class=\"nx\">when</span><span class=\"p\">(</span><span class=\"s1\">&#39;/post/:id&#39;</span><span class=\"p\">,{</span>\r\n    <span class=\"nx\">templateUrl</span><span class=\"o\">:</span> <span class=\"s1\">&#39;show_post.html&#39;</span><span class=\"p\">,</span>\r\n    <span class=\"nx\">controller</span><span class=\"o\">:</span> <span class=\"s1\">&#39;mainPostController&#39;</span><span class=\"p\">,</span>\r\n  <span class=\"p\">});</span>\r\n\r\n\r\n\r\n<span class=\"c1\">//#app/routes.js&lt;/p&gt;</span>\r\n  <span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;/post/:id&#39;</span><span class=\"p\">,</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span><span class=\"nx\">res</span><span class=\"p\">){</span>\r\n    <span class=\"nx\">Post</span><span class=\"p\">.</span><span class=\"nx\">findOne</span><span class=\"p\">({</span>\r\n       <span class=\"nx\">_id</span> <span class=\"o\">:</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">params</span><span class=\"p\">.</span><span class=\"nx\">id</span>\r\n    <span class=\"p\">},</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span><span class=\"nx\">post</span><span class=\"p\">){</span>\r\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">post</span><span class=\"p\">)</span>\r\n      <span class=\"c1\">// console.log(posts)</span>\r\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\r\n        <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\r\n      <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">(</span><span class=\"nx\">post</span><span class=\"p\">);</span>\r\n    <span class=\"p\">});</span>\r\n  <span class=\"p\">});</span>\r\n</pre></div>\r\n</body>\r\n</div>", :post_id => 14)
Article.create(:id => 20, :body => "<div class = \"code\">\r\n//show_post.html\r\n</head>\r\n<body>\r\n<h2></h2>\r\n\r\n<div class=\"highlight\"><pre><span class=\"nt\">&lt;div</span> <span class=\"na\">data-ng-init=</span><span class=\"s\">&quot;showPost()&quot;</span><span class=\"nt\">&gt;</span>\r\n<span class=\"nt\">&lt;h1&gt;</span>{{post}}<span class=\"nt\">&lt;/h1&gt;</span>\r\n</pre></div>\r\n</body>\r\n</div>", :post_id => 14)
Article.create(:id => 21, :body => "<body>\r\n<div class=\"terminal\">\r\n<p>mkdir /path/to/deploy/shared/tmp<p></div>\r\n</body>\r\n", :post_id => 15)
Article.create(:id => 22, :body => "make sure you have the right permissions too. drwxr-xr-x", :post_id => 15)
Article.create(:id => 23, :body => "Non-relational - Does not enforce as many rules as RDBMS\r\nScalable\r\nDocument Database - not storing rows but JSON as collections.\r\n\r\nTable, View -> Collection\r\nRow -> Document, BSON Binarial form of JSON, serialized binarialy\r\nIndex -> Index\r\nJoin(single autonomous) -> Embedded Document- Think of as super document.\r\nForeignKey -> Reference\r\nPartition -> Shard\r\n\r\nRDBMS\r\nAttr columns valid for every row - \r\nDup rows not allowed - Mongodb does not all dup ids ie: _id(auto indexed unique)\r\nEvery columns has same type and meaning - Mongodb can have different docs with dif types\r\n\r\nMongodb has a more flexible schema\r\n\r\nThink in terms of data in terms at document label.\r\nYou want to enforce schema design in coordination with application\r\nYou dont have to have same fields etc but this is the way it usually turns out if you do schema correctily\r\n\r\nMongodb Going to favor a denormalized pattern \r\n\r\n1st Normal Form: No Repeating Groups\r\n - Cant use equality to match elements\r\n - must use regex to find data\r\n- aggregates are difficult\r\n-updating specific elements are difficult\r\n\r\nTao of MDB\r\nie:\r\n - an array of strings (can declare indexes)\r\n\r\n$unwind operator $foo\r\n creates doc to sum things \r\n\r\nadjacency list\r\nintersection table\r\n\r\ngoals of normalization\r\n model data in understandable form\r\nreduce fact redundancy and data inconsistency \r\nenforce integrity constraints\r\nperfomramnce is not top priority\r\n\r\nNorm or Denorm\r\ndenorm is viewed as faster but not neccesarilly, denorm read faster than norm read.\r\n norm requires indexing to improve performance. affects performance on writes to updated indexes\r\n\r\ndenorm is prejoined in a way. \r\nmdb works best in a service to an application. Denorm improves at cost of others\r\n\r\nTables per concrete class does not support polymorphic relationships\r\nTable per class family will have nullability issues\r\n\r\nPolymorphic objects can map into Mongodb more efficiently with indexing strategy\r\n\r\n\r\nACID Transactions\r\n Atomci ops at Doc level\r\nStrong/eventual consistency\r\n\r\n\r\nMDBScales horizontally - not bigger box but more boxes\r\n\r\nUser defines the shard key\r\n", :post_id => 11)
Article.create(:id => 24, :body => "SELECT main.*\r\n  FROM (SELECT sub1.*,\r\n               (SELECT SUM(sub2.impressions)\r\n                  FROM v_lr_metrics_by_day sub2\r\n                 WHERE sub2.date <= sub1.date AND sub2.creative_id = sub1.creative_id) AS running_total_impressions\r\n         FROM v_lr_metrics_by_day sub1\r\n     ORDER BY sub1.campaign_id) main\r\n     JOIN dim_time t on main.date = t.date_id\r\n     WHERE t.year = 2014\r\n     AND t.month  = 4\r\nORDER BY main.date, campaign_id\r\n", :post_id => 12)
Article.create(:id => 25, :body => "gem 'zip'\r\ngem 'rubyzip'\r\ngem 'acts_as_xlsx'\r\ngem 'axlsx_rails'\r\n\r\nbundle install\r\nrake rails:update:bin\r\n\r\n should be fixed", :post_id => 16)
Article.create(:id => 26, :body => "section \"Your tasks for this week\" do\r\n      form do |f|\r\n        f.input \r\n      end\r\n      table_for PremiumCampaign.query(\"2014-05-05\") do |pc|\r\n        pc.column(\"impressions\"){|camp| camp[\"impressions\"] }\r\n        pc.column(\"rate_type\"){|camp| camp[\"rate_type\"]}\r\n        pc.column(\"pc_id\"){|camp| camp[\"pc_id\"]}\r\n        pc.column(\"campaign_name\"){|camp| camp[\"campaign_name\"]}\r\n        pc.column(\"campaign_id\"){|camp| camp[\"campaign_id\"]}\r\n        pc.column(\"line_type\"){|camp| camp[\"line_type\"]}\r\n        pc.column(\"campaign_start_date\"){|camp| camp[\"campaign_start_date\"]}\r\n        pc.column(\"campaign_end_date\"){|camp| camp[\"campaign_end_date\"]}\r\n        pc.column(\"days_left\"){|camp| camp[\"days_left\"]}\r\n        pc.column(\"campaign_goal\"){|camp| camp[\"campaign_goal\"]}\r\n        pc.column(\"cost\"){|camp| camp[\"cost\"]}\r\n        pc.column(\"revenue\"){|camp| camp[\"revenue\"]}\r\n        pc.column(\"impressions\"){|camp| camp[\"impressions\"]}\r\n        pc.column(\"clickthroughs\"){|camp| camp[\"clickthroughs\"]}\r\n        pc.column(\"ctr\"){|camp| camp[\"ctr\"]}\r\n        pc.column(\"watched25\"){|camp| camp[\"watched25\"]}\r\n        pc.column(\"watched50\"){|camp| camp[\"watched50\"]}\r\n        pc.column(\"watched75\"){|camp| camp[\"watched75\"]}\r\n        pc.column(\"watched100\"){|camp| camp[\"watched100\"]}\r\n      end\r\n    end\r\n\r\n\r\n  def self.query(snapshot_date)\r\n    ActiveRecord::Base.connection.exec_query(\"SELECT DATE(m.hour) AS `date`,\r\n    f.name as flight_name,\r\n    pc.id AS campaign_id,\r\n    pc.campaign_name,\r\n    -- SUBSTRING_INDEX(`ol`.`name`,':',1) AS `customer_id`,\r\n    -- SUBSTRING_INDEX(SUBSTRING_INDEX(`ol`.`name`,':',2),':',-(1)) AS `business_unit`,\r\n    -- SUBSTRING_INDEX(SUBSTRING_INDEX(`ol`.`name`,':',3),':',-(1)) AS `business_segment`,\r\n    -- SUBSTRING_INDEX(`ol`.`name`,':',-(1)) AS `description`,\r\n    ol.order_id,\r\n    ol.order_line_id,\r\n    ol.line_type,\r\n    pc.campaign_start_date,\r\n    pc.campaign_end_date,\r\n    DATEDIFF(pc.campaign_end_date, DATE(m.hour)) AS days_left,\r\n    pc.campaign_goal,\r\n    IF(ol.line_type = 'marketplace',\r\n      SUM(REPLACE(m.spend, '$', '')),\r\n      ((SUM(m.impressions) / 1000)*f.publisher_rate) + ((SUM(m.impressions) / 1000)*f.ad_server_rate)\r\n      ) AS cost,\r\n    (CASE\r\n    WHEN (pc.rate_type = 'CPM') then\r\n      ((sum(m.impressions) / 1000) * pc.advertiser_rate)\r\n    WHEN (pc.rate_type = 'CPMCV') then\r\n      ((sum(m.watched100) / 1000) * pc.advertiser_rate)\r\n    WHEN (pc.rate_type = 'CPCV')\r\n      then (sum(m.watched100) * pc.advertiser_rate) end) AS revenue,\r\n    SUM(REPLACE(m.revenue, '$', '')) lr_revenue,\r\n    SUM(m.impressions) AS impressions,\r\n    SUM(m.watched25) AS watched25,\r\n    SUM(m.watched50) AS watched50,\r\n    SUM(m.watched75) AS watched75,\r\n    SUM(clickthroughs) AS clickthroughs,\r\n    SUM(m.watched100) AS watched100,\r\n    ((SUM(m.clickthroughs) / SUM(m.impressions)) * 100) AS ctr,\r\n    pc.rate_type,\r\n    pc.id as pc_id,\r\n    f.group as grouping,\r\n    pc.company as company\r\n    FROM source_liverail_order_lines ol,\r\n    source_liverail_metrics m,\r\n    premium_campaigns pc,\r\n    flights f\r\n      WHERE m.order_line_id = ol.order_line_id\r\n      AND m.order_line_id = f.ad_server_order_line\r\n      AND f.campaign_id = pc.id\r\n      AND DATE(m.hour) = '\#{snapshot_date}'\r\n\r\n      GROUP BY f.group, f.campaign_id, DATE(m.hour)\r\n      ORDER BY pc.rate_type, pc.campaign_name,DATE(m.hour);\")\r\n  end\r\n", :post_id => 17)
